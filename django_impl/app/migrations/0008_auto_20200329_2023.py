# Generated by Django 3.0.4 on 2020-03-29 20:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app', '0007_auto_20200329_1803'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=2000)),
                ('answer', models.CharField(max_length=2000)),
                ('marked', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AbstractDeck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=2000)),
                ('default_layout', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.CardLayout')),
                ('tags', models.ManyToManyField(to='app.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EbisuCardModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_result', models.BooleanField()),
                ('alpha', models.FloatField()),
                ('beta', models.FloatField()),
                ('t', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EbisuCard',
            fields=[
                ('abstractcard_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.AbstractCard')),
            ],
            options={
                'abstract': False,
            },
            bases=('app.abstractcard',),
        ),
        migrations.CreateModel(
            name='EbisuDeck',
            fields=[
                ('abstractdeck_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.AbstractDeck')),
            ],
            options={
                'abstract': False,
            },
            bases=('app.abstractdeck',),
        ),
        migrations.CreateModel(
            name='AbstractCardModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.AbstractCard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='abstractcard',
            name='deck_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.AbstractDeck'),
        ),
        migrations.AddField(
            model_name='abstractcard',
            name='layout',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.CardLayout'),
        ),
        migrations.AddField(
            model_name='abstractcard',
            name='tags',
            field=models.ManyToManyField(to='app.Tag'),
        ),
    ]
